import os
import sys
from bottle import Bottle, run, request, template, debug, static_file
from datetime import datetime
from visualization import MAP_FILE_PATH
from DatabaseAccess.Connector import Connector
import DatabaseAccess.sql_requests as sql
import bdd_management
import roadtrip_compute

DIRNAME = os.path.dirname(sys.argv[0])

app = Bottle()


@app.route('/static/<filename:re:.*\.css>')
def send_css(filename):
    return static_file(filename, root=DIRNAME+'/static/asset/css')


@app.route('/static/<filename:re:.*\.js>')
def send_js(filename):
    return static_file(filename, root=DIRNAME+'/static/asset/js')


@app.route('/images/<filename:re:.*\.png>')
def images(filename):
    return static_file(filename, root=DIRNAME+'/images')


@app.route('/')
def index():
    return template('index', prefectures_table_state="Chargé", journey_table_state="Ok",
                    french_trip_table_state="Calculé")


@app.route('/roadtrip_map')
def serve_picture():
    """ return map generated by road trip """
    if not os.path.exists(MAP_FILE_PATH):
        return
    filename = os.path.basename(MAP_FILE_PATH)
    return static_file(filename, root=MAP_FILE_PATH.replace(filename, ''))


@app.route('/consult', method='GET')
def consult_travel():
    db_connector = Connector()
    with db_connector:
        trip_results = db_connector.execute_query(
            sql.SQL_GET_FRENCH_TRIP_RESUME)
        return template("consult", trip_results=trip_results)


@app.route('/initialize', method='GET')
def initialize_data():
    operation = request.query.operation

    if operation != '':
        if(operation == 'init_prefecture'):
            bdd_management.load_prefecture()
        if(operation == 'init_trip'):
            start_date = request.query.start_date
            start_date = datetime.strptime(start_date, "%d/%m/%Y").strftime("%Y%m%dT%H%M%S")

            force_refresh = request.query.force == 'on'
            is_co2_search = request.query.type == 'co2'

            roadtrip_compute.run_travel_optimisation(start_date, is_co2_search, force_refresh)

    return template("init")


@app.route('/manage', method='GET')
def bdd_operation():
    bdd_operation = request.query.operation

    if bdd_operation != '':
        if(bdd_operation == 'trunc_journey'):
            bdd_management.truncate_journey()
        if(bdd_operation == 'trunc_prefecture'):
            bdd_management.truncate_prefecture()
        if(bdd_operation == 'trunc_roadtrip'):
            bdd_management.truncate_roadtrip()
        if(bdd_operation == 'init_schema'):
            bdd_management.initialize_schema()

    return template("manage")


"""
Run server
"""
run(app, host='localhost', port=8080)
